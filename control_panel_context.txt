1. هيكلة لوحة التحكم

التقنيات المستخدمة:
Next.js → لإنشاء واجهة لوحة التحكم.
Tailwind CSS → لتصميم الواجهة.
Node.js + Express → لإنشاء API وسيط بين الواجهة وقاعدة البيانات.

الأقسام الرئيسية في لوحة التحكم:

إدارة المستخدمين
- عرض قائمة المستخدمين.
- تعديل بيانات المستخدمين.
- حذف المستخدمين.
- إضافة مسؤولين.

إدارة الأغاني
- إضافة أغاني جديدة.
- تعديل بيانات الأغاني.
- حذف الأغاني.

إدارة قوائم التشغيل
- عرض قوائم التشغيل الخاصة بالمستخدمين.
- تعديل وإضافة الأغاني داخل القوائم.

الإعدادات العامة
- التحكم بإعدادات التشغيل.
- إعدادات الإعلانات والإشعارات.

إحصائيات وتحليلات
- عدد المستخدمين.
- الأغاني الأكثر استماعًا.
- تقارير الاستخدام.

2. تطوير قسم إدارة المستخدمين
- عرض قائمة المستخدمين (واجهة تعرض بيانات المستخدمين المسجلين).
- إمكانية تعديل بيانات المستخدمين (صفحة تعديل مع نموذج بيانات).
- حذف المستخدمين مع تأكيد العملية.
- إضافة مسؤولين جدد (صلاحيات محددة للمسؤولين).
- ربط القسم بـ API للحصول على البيانات وإدارتها.

3. تطوير قسم إدارة الأغاني
- إضافة أغاني جديدة (نموذج إدخال البيانات وتحميل الملفات).
- تعديل بيانات الأغاني (تعديل العنوان، الفنان، التصنيف، إلخ).
- حذف الأغاني مع تأكيد العملية.

4. تطوير قسم إدارة قوائم التشغيل
- عرض قوائم التشغيل الخاصة بالمستخدمين (مع خيارات البحث والفرز).
- إضافة / حذف / تعديل الأغاني داخل قوائم التشغيل.
- تحسين تجربة الاستخدام عبر السحب والإفلات (Drag & Drop) إن أمكن.
- ربط القسم بـ API لجلب وتحديث البيانات تلقائيًا.

5. تطوير قسم الإعدادات العامة
- إعدادات التشغيل (خيارات تخص التحكم في التشغيل).
- إدارة الإعلانات والإشعارات (تمكين / تعطيل الإعلانات والإشعارات).
- حفظ التعديلات في قاعدة البيانات عبر API.

6. تطوير قسم الإحصائيات والتحليلات
- إظهار عدد المستخدمين المسجلين والمُفعّلين.
- عرض قائمة الأغاني الأكثر استماعًا (حسب التصنيفات أو الفترات الزمنية).
- إعداد تقارير استخدام شاملة مع رسوم بيانية تفاعلية.
- ربط البيانات من قاعدة البيانات باستخدام API وإظهارها بشكل مرئي جذاب.


design schema:
radius => lg,
padding => small
shadow => none
shadow hover effect => no
scale hover effect => no


IMPORTANT NOTE => this is a react project not nextjs